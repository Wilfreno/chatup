
name: Deploy to Amazon ECS

on:
  release:
    types:
      - published

env:
  AWS_REGION: "ap-southeast-1" # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: "wing09/chatup" 
  ECS_SERVICE: "chat-up-service" # set this to your Amazon ECS service name
  ECS_CLUSTER: "chatup-server" 
  ECS_TASK_DEFINITION: ".github/workflows/ecs-task-definition.json"
  CONTAINER_NAME: "chatup-container"

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Determine Tag
        id: tag
        run: |
          # Determine the tag based on the repository or branch
          echo "REPO_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Update task definition
        run: |
          sed -i 's|<mongodb-uri> .*|${{ secrets.MONGODB_URI }}|' .github/workflows/ecs-task-definition.json
          sed -i 's|<gmail-2f-auth-app-pass> .*|${{ secrets.GMAIL_2F_AUTH_APP_PASS }}|' .github/workflows/ecs-task-definition.json

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.REPO_TAG }}
        run: |
          # Build a docker container and  
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
